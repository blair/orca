RRDUPDATE(1)                 rrdtool                 RRDUPDATE(1)



NNNNAAAAMMMMEEEE
       rrdtool update - Store a new set of values into the rrd

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
       rrrrrrrrddddttttoooooooollll uuuuppppddddaaaatttteeee _f_i_l_e_n_a_m_e [--------tttteeeemmmmppppllllaaaatttteeee|----tttt _d_s_-_n_a_m_e[::::_d_s_-
       _n_a_m_e]...]  NNNN|_t_i_m_e_s_t_a_m_p::::_v_a_l_u_e[::::_v_a_l_u_e...]  [_t_i_m_e_s_-
       _t_a_m_p::::_v_a_l_u_e[::::_v_a_l_u_e...] ...]

DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
       The uuuuppppddddaaaatttteeee function feeds new data values into an RRRRRRRRDDDD. The
       data gets time aligned according to the properties of the
       RRRRRRRRDDDD to which the data is written.

       _f_i_l_e_n_a_m_e
               The name of the RRRRRRRRDDDD you want to update.

       --------tttteeeemmmmppppllllaaaatttteeee|----tttt _d_s_-_n_a_m_e[::::_d_s_-_n_a_m_e]...
               by default, the update function expects the data
               input in the order, the data sources are defined
               in the RRD. This is not very error resistant, as
               you might be sending the wrong data into a RRD.

               The template switch allows you to specify which
               data sources you are going to update and in which
               order. If the data sources specified in the tem-
               plate are not available in the rrd file, the
               update process will abort with an error message.

       NNNN|_t_i_m_e_s_t_a_m_p::::_v_a_l_u_e[::::_v_a_l_u_e...]
               The data used for updating the RRD was acquired at
               a certain time. This time can either be defined in
               seconds since 1970-01-01. Or by using the letter
               'N' the update time is set to be the current time.
               Negative time values are subtracted from the cur-
               rent time.  Getting the timing right to the second
               is especially important when you are working with
               data-sources of type CCCCOOOOUUUUNNNNTTTTEEEERRRR, DDDDEEEERRRRIIIIVVVVEEEE or AAAABBBBSSSSOOOOLLLLUUUUTTTTEEEE.

               The remaining elements of the argument are DS
               updates. The order of this list is the same as the
               order the data sources were defined in the rra.
               If there is no data for a certain data-source, the
               letter UUUU (eg. N:0.1:U:1) can be defined.

               The format of the value acquired from the data
               source is dependent of the data source type cho-
               sen. Normally it will be numeric, but the data
               acquisition modules may impose their very own
               parsing of this parameter as long as the colon (::::)
               remains the data source value separator.

EEEEXXXXAAAAMMMMPPPPLLLLEEEE
       "rrdtool update demo1.rrd N:3.44:3.15:U:23"

       Update the database file demo1.rrd with 3 known and one
       _*_U_N_K_N_O_W_N_* value. Use the current time as the update time.

       "rrdtool update demo2.rrd 887457267:U 887457521:22
       88745790:2.7"

       Update the database file demo2.rrd which expects data from
       a single data-source, three times. First with an _*_U_N_K_N_O_W_N_*
       value then with two normal readings. The update interval
       seems to be around 300 seconds.

AAAAUUUUTTTTHHHHOOOORRRR
       Tobias Oetiker <oetiker@ee.ethz.ch>



2002-02-26                    1.0.40                 RRDUPDATE(1)
