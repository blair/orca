#! @PERL@ 

=head1 NAME

rrd_demo.pl - exercise rrdtool

=head1 SYNOPSIS
 
rrd_demo.pl

=head1 DESCRIPTION

The purpose of this script is to exercise rrdtool.
First it will create an rrd file and fill it with data. 
Then it will use the graphing function to generate some gifs ...

=head1 AUTHOR 

Tobias Oetiker <oetiker@ee.ethz.ch>

=cut

BEGIN { unshift @INC, "../blib/lib"; }

use RRDp;


$main::DEBUG=0;
$STEP1 = 200;
$STEP2 = 300;
$RUNS1 = 3000;
$RUNS2 = 3000;
$GRUNS = 20;
$RRD1 = "demo1.rrd";
$RRD2 = "demo2.rrd";
$GIF = "demo.gif";


RRDp::start "../../src/rrdtool";

print "* Creating First RRD $RRD1\n\n";

$START1 = time()-$RUNS1*$STEP1;

RRDp::cmd "create $RRD1 -b $START1 -s $STEP1 
	DS:in:GAUGE:400:U:U
	DS:out:GAUGE:400:U:U
	RRA:AVERAGE:0.5:1:5000
	RRA:AVERAGE:0.5:8:5000";

$answer = RRDp::read;

print "* Creating Second RRD $RRD2\n\n";

$START2 = time()-$RUNS2*$STEP2;

RRDp::cmd "create $RRD2 -b $START2 -s $STEP2 
	DS:in:GAUGE:400:U:U
	DS:out:GAUGE:400:U:U
	RRA:AVERAGE:0.5:1:4000
	RRA:AVERAGE:0.5:8:5000";

$answer = RRDp::read;
($user,$sys,$real) =  ($RRDp::user,$RRDp::sys,$RRDp::real);
    
print "* Filling both RRDs with ".(($RUNS1+$RUNS2)*2)." Values. One moment please ...\n";
print "  If you are running over NFS this will take *MUCH* longer\n\n"; 

for ($i=$START1+1;
     $i<$START1+$STEP1*$RUNS1;
     $i+=$STEP1+int((rand()-0.5)*7)){

  $line = "update $RRD1 $i:".
	(2000*cos($i/1550)).":".
	  (3220*sin($i/3420));
  
  RRDp::cmd $line;
  $answer = RRDp::read;
}

for ($i=$START2+1;
     $i<$START2+$STEP2*$RUNS2;
     $i+=$STEP2+int((rand()-0.5)*7)){

  $line = "update $RRD2 $i:".
    (1000+500*sin($i/1000)).":".
      (1000+900*sin($i/2330));

  RRDp::cmd $line;

  $answer = RRDp::read;
}
($user1,$sys1,$real1) =  ($RRDp::user,$RRDp::sys,$RRDp::real);

printf "-- Average Time for one Update (2 RRD 2 DS 2 RRA)\n".
       "   usr: %1.4fs sys: %1.4fs real: %1.4fs logs/s: %1.4f\n",
  ($user1-$user)/($RUNS1+$RUNS2), ($sys1-$sys)/($RUNS1+$RUNS2), 
  ($real1-$real)/($RUNS1+$RUNS2), ($RUNS1+$RUNS2)/($real1-$real);
print "\n";
# creating some graphs

print "* Creating $GRUNS graphs: $GIF\n\n";
$now = time;
for ($i=0;$i<$GRUNS;$i++) {
RRDp::cmd "graph $GIF ", "--title 'Test GRAPH' ",
	"--height 100 --vertical-label 'Dummy Units' --start ".(-$RUNS1*$STEP1/10),
	"--color ARROW#bfbfbf",
        "DEF:alpha=$RRD1:in:AVERAGE",
        "DEF:beta=$RRD1:out:AVERAGE",
        "DEF:gamma=$RRD2:in:AVERAGE",
        "DEF:delta=$RRD2:out:AVERAGE",
        "CDEF:calc=alpha,beta,+,1.5,/",
        "AREA:alpha#0022e9:Alpha",
        "STACK:beta#00b871:'Beta Text\\j'",
        "LINE1:gamma#ff0000:'Gamma 1'",
        "LINE2:delta#888800:'Delta 2\\c'",
        "LINE3:calc#00ff44:'calc 3'",
        "HRULE:2300#ff8800:'Horizontal Line at 2300'",
	"PRINT:alpha:AVERAGE:'Average Alpha\\: %1.2f'",
	"PRINT:alpha:MIN:'Min Alpha\\: %1.2f'",
	"PRINT:alpha:MAX:'Max Alpha\\: %1.2f'",
	"GPRINT:calc:AVERAGE:'Average calc\\: %1.2f\\r'",
	"GPRINT:calc:MAX:'Max calc\\: %1.2f'",
	"GPRINT:calc:MIN:'Min calc\\: %1.2f'",
        "VRULE:".($now-3600)."#008877:'60 Minutes ago'",
        "VRULE:".($now-4600)."#ff8877:",
        "VRULE:".($now-7200)."#ffff00",
        "COMMENT:'\\s'",
        "COMMENT:'a last one centered with some more space aboce\\c'";

$answer = RRDp::read;
}
($user2,$sys2,$real2) =  ($RRDp::user,$RRDp::sys,$RRDp::real);

print "ANSWER:\n$$answer";

printf "\n-- average Time for one Graph (5 graph, 8 print)\n".
       "   usr: %1.4fs sys: %1.4fs real: %1.4fs   graphs/sec: %1.4f\n",
  ($user2-$user1)/$GRUNS, 
  ($sys2-$sys1)/$GRUNS, 
  ($real2-$real1)/$GRUNS, 
  $GRUNS/($real2-$real1);

RRDp::cmd  "graph log$GIF ", "--title 'Log Test GRAPH' ",
	"--logarithmic --lower-limit 10 --height 200 --vertical-label 'Dummy Units' --start ".(-$RUNS1*$STEP1/10),
        "DEF:alpha=$RRD1:in:AVERAGE",
        "DEF:beta=$RRD1:out:AVERAGE",
        "DEF:gamma=$RRD2:in:AVERAGE",
        "DEF:delta=$RRD2:out:AVERAGE",
        "CDEF:calc=alpha,beta,+,1.5,/",
        "AREA:alpha#0022e9:Alpha",
        "STACK:beta#00b871:'Beta Text'",
        "LINE1:gamma#ff0000:'Gamma 1'",
        "LINE2:delta#888800:'Delta 2'",
        "LINE3:calc#00ff44:'calc 3'",
	"GPRINT:calc:AVERAGE:'Average calc\\: %1.2f'",
	"GPRINT:calc:MAX:'Max calc\\: %1.2f'",
	"GPRINT:calc:MIN:'Min calc\\: %1.2f'";

$answer = RRDp::read;

print "\n* Created log$GIF to demonstrate logarithmic scaling\n\n";

RRDp::end;













