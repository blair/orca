.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH RRDFETCH 1 "19990426.22" "21/Apr/99" "rrdtool"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
rrdtool fetch \- fetch data from an rrd.
.SH "SYNOPSIS"
\fBrrdtool\fR \fBfetch\fR \fIfilename\fR \fICF\fR 
[\fB--resolution\fR|\fB\-r\fR\ \fIresolution\fR] 
[\fB--start\fR|\fB\-s\fR\ \fIstart\fR] 
[\fB--end\fR|\fB\-e\fR\ \fIend\fR] 
.SH "DESCRIPTION"
The \fBfetch\fR function is normally used internally by the graph function,
to get data from \fBRRD\fRs. \fBfetch\fR will analyze the \fBRRD\fR and
will try to retrieve the data in the resolution requested.
The data fetched is printed to stdout. \fI*UNKNOWN*\fR data is often
represented by the string \*(L"NaN\*(R" depending on your OSs printf
function.
.Ip "\fIfilename\fR " 8
the name of the \fB\s-1RRD\s0\fR you want to fetch the data from.
.Ip "\fI\s-1CF\s0\fR " 8
which consolidation function should have been applied to the data you
want to fetch? (\s-1AVERAGE\s0,\s-1MIN\s0,\s-1MAX\s0,\s-1LAST\s0)
.Ip "\fB--resolution\fR|\fB\-r\fR \fIresolution\fR (default is the highest resolution)" 8
what interval should the values have (seconds per value). \fBrrdfetch\fR will try
to match your request, but it will return data even if no absolute
match is possible.
.Ip "\fB--start\fR|\fB\-s\fR \fIstart\fR (default \-24*3600)" 8
when should the data begin. A time in seconds since epoch (1970-01-01)
is required. Negative numbers are relative to the end time. By default
one day worth of data will be fetched. See also \s-1AT\s0\-\s-1STYLE\s0 \s-1TIME\s0 \s-1SPECIFICATION\s0
section for alternative ways to specify start time.
.Ip "\fB--end\fR|\fB\-e\fR \fIend\fR (default current time)" 8
when should the data end. Time in seconds since epoch. See also
\s-1AT\s0\-\s-1STYLE\s0 \s-1TIME\s0 \s-1SPECIFICATION\s0 section for alternative ways to specify
end time.
.Sh "\s-1AT\s0\-\s-1STYLE\s0 \s-1TIME\s0 \s-1SPECIFICATION\s0"
The rrdtool does also understand at-style time specification.
The specification is called \*(L"at-style\*(R" after unix command \fIat\fR\|(1)
that has moderately complex ways to specify time to run your job at.
The at-style specification consists of two parts: \fB\s-1TIME\s0 \s-1REFERENCE\s0\fR
specification and \fB\s-1TIME\s0 \s-1OFFSET\s0\fR specification.
.Sh "\s-1TIME\s0 \s-1REFERENCE\s0 \s-1SPECIFICATION\s0"
Time reference specification is used, well,... to establish a reference
moment in time (for time offset to be applied to). When present,
it should come first, when omitted, it defaults to \fBnow\fR. On its own part,
time reference consists of \fItime-of-day\fR reference (which should come
first, if present) and \fIday\fR reference.
.PP
\fITime-of-day\fR can be specified as \fB\s-1HH:MM\s0\fR, \fB\s-1HH\s0.\s-1MM\s0\fR, \fB\s-1HHMM\s0\fR,
or just \fB\s-1HH\s0\fR, you can suffix it with \fBam\fR or \fBpm\fR or use
24-hours clock. The few special times of day are understood as well,
these include \fBmidnight\fR (00:00), \fBnoon\fR (12:00) and british
\fBteatime\fR (16:00).
.PP
The \fIday\fR can be specified as \fImonth-name\fR \fIday-of-the-month\fR
and optional 2- or 4-digit \fIyear\fR number (e.g. March 8 1999).
Alternatively, you can use \fIday-of-week-name\fR (e.g. Monday),
or one of the words: \fByesterday\fR, \fBtoday\fR, \fBtomorrow\fR.
You can also specify \fIday\fR as a full date in several numerical formats;
these include: \fB\s-1MM/DD\s0/[\s-1YY\s0]\s-1YY\s0\fR, \fB\s-1DD\s0.\s-1MM\s0.[\s-1YY\s0]\s-1YY\s0\fR, \fB\s-1DDMM\s0[\s-1YY\s0]\s-1YY\s0\fR
(\fI\s-1NOTE1\s0\fR: this is different from the original \fIat\fR\|(1) behavior,
which interprets a single-number date as \s-1MMDD\s0[\s-1YY\s0]\s-1YY\s0)
\fI\s-1NOTE2\s0\fR: if you specify \fIday\fR this way, the \fItime-of-day\fR is \s-1REQUIRED\s0
to be present in front of it.
.PP
Finally, you can use words \fBnow\fR, \fBstart\fR, or \fBend\fR as your time
reference. \fBNow\fR refers to the current moment (and is also a default
time reference). \fBStart\fR (\fBend\fR) can be used to specify time
relative to the start (end) time for those tools that use these
categories (rrdfetch, rrdgraph).
.PP
Month and weekday names can be used in their naturally abbreviated form
(e.g., Dec for December, Sun for Sunday, etc.). The words \fBnow\fR,
\fBstart\fR, \fBend\fR can be abbreviated to \fBn\fR, \fBs\fR, \fBe\fR.
.Sh "\s-1TIME\s0 \s-1OFFSET\s0 \s-1SPECIFICATION\s0"
Time offset specification is used to add (or substract) certain time
interval to (from) the time reference moment. It consists of \fIsign\fR
(\fB+\fR\ or\ \fB\-\fR) and \fIamount\fR. The following time units can be used
to specify the \fIamount\fR: \fByears\fR, \fBmonths\fR, \fBweeks\fR, \fBdays\fR,
\fBhours\fR, \fBminutes\fR, \fBseconds\fR, these can be used in singular
or plural form, and abbreviated naturally or to a single letter
(e.g. +3days, \-1wk, \-3y). Several time units can be combined
together (e.g., \-5mon1w2d), as well as several time offsets can be
concatenated (e.g., \-5h45min = \-5h-45min = \-6h+15min = \-7h+1h30m-15min, etc.)
.PP
\fI\s-1NOTE3\s0\fR: If you specify time offset in days, weeks, months, or years,
you will end with the time offset that may vary depending on you time
reference, because all those time units have no single well defined
time interval value (1\ year contains either 365 or 366 days, 1\ month
is 28 to 31 days long, and even 1\ day may be not equal to 24 hours
twice a year, when \s-1DST\s0\-related clock adjustments take place).
To cope with this, when you use days, weeks, months, or years
as your time offset units your time reference date is adjusted
accordingly without taking too much further effort to ensure anything
about it (in the hope that \fImktime\fR\|(3) will take care of this later).
This may lead to some surprising (or even invalid!) results,
e.g. \*(L'May\ 31\ \-1month\*(R' = \*(L'Apr\ 31\*(R' (meaningless) = \*(L'May\ 1\*(R'
(after \fImktime\fR\|(3) normalization); in the \s-1EET\s0 timezone
\&'3:30am Mar 29 1999 \-1 day\*(R' yields \*(L'3:30am Mar 28 1999\*(R' (Sunday)
which is invalid time/date combination (because of 3am \-> 4am \s-1DST\s0
forward clock ajustment, see the below example).
On the other hand, hours, minutes, and seconds are well defined time
intervals, and these are guaranteed to always produce time offsets
exactly as specified (e.g. for \s-1EET\s0 timezone, \*(L'8:00\ Mar\ 27\ 1999\ +2\ days\*(R' =
\&'8:00\ Mar\ 29\ 1999\*(R', but since there is 1-hour \s-1DST\s0 forward clock adjustment
takes place around 3:00\ Mar\ 28\ 1999, the actual time interval between
8:00\ Mar\ 27\ 1999 and 8:00\ Mar\ 29\ 1999 equals 47 hours; on the other hand,
\&'8:00\ Mar\ 27\ 1999\ +48\ hours\*(R' = \*(L'9:00\ Mar\ 29\ 1999\*(R', as expected)
.PP
\fI\s-1NOTE4\s0\fR: The single-letter abbreviation for both \fBmonths\fR and \fBminutes\fR
is \fBm\fR. To disambiguiate, the parser tries to read your mind\ :)
by applying the following two heuristics:
.Ip "1" 3
If \fBm\fR is used in context of (i.e. right after the) years,
months, weeks, or days it is assumed to mean \fBmonths\fR, while
in the context of hours, minutes, and seconds it means minutes.
(e.g., in \-1y6m or +3w1m \fBm\fR means \fBmonths\fR, while in
\-3h20m or +5s2m \fBm\fR means \fBminutes\fR)
.Ip "2" 3
Out of context (i.e. right after the \fB+\fR or \fB\-\fR sign) the
meaning of \fBm\fR is guessed from the number it directly follows.
Currently, if the number absolute value is below 25 it is assumed
that \fBm\fR means \fBmonths\fR, otherwise it is treated as \fBminutes\fR.
(e.g., \-25m == \-25 minutes, while +24m == +24 months)
.PP
\fIFinal \s-1NOTES\s0\fR: Time specification is case-insensitive.
Whitespace can be inserted freely or omitted altogether,
there are, however, cases when whitespace is required
(e.g., \*(L'midnight\ Thu'). In this case you should either quote the
whole phrase to prevent it from bieng taken apart by your shell or use
\&'_\*(R' (underscore) or \*(L',\*(R' (comma) which also count as whitespace
(e.g., midnight_Thu or midnight,Thu)
.Sh "\s-1TIME\s0 \s-1SPECIFICATION\s0 \s-1EXAMPLES\s0"
\fIOct 12\fR -- October 12 this year
.PP
\fI\-1month\fR or \fI\-1m\fR -- current time of day, only a month before
(may yield surprises, see the \s-1NOTE3\s0 above)
.PP
\fInoon yesterday \-3hours\fR -- yesterday morning; can be put also as \fI9am-1day\fR
.PP
\fI23:59 31.12.1999\fR -- 1 minute to the year 2000
.PP
\fI12am 010101\fR -- start of the new millenium
.PP
\fIend-3weeks\fR or \fIe-3w\fR -- 3 weeks before end time
(may be used as start time specification)
.PP
\fIstart+6hours\fR or \fIs+6h\fR -- 6 hours after start time
(may be used as end time specification)
.SH "AUTHOR"
Tobias Oetiker <oetiker@ee.ethz.ch>

.rn }` ''
.IX Title "RRDFETCH 1"
.IX Name "rrdtool fetch - fetch data from an rrd."

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Item "\fIfilename\fR "

.IX Item "\fI\s-1CF\s0\fR "

.IX Item "\fB--resolution\fR|\fB\-r\fR \fIresolution\fR (default is the highest resolution)"

.IX Item "\fB--start\fR|\fB\-s\fR \fIstart\fR (default \-24*3600)"

.IX Item "\fB--end\fR|\fB\-e\fR \fIend\fR (default current time)"

.IX Subsection "\s-1AT\s0\-\s-1STYLE\s0 \s-1TIME\s0 \s-1SPECIFICATION\s0"

.IX Subsection "\s-1TIME\s0 \s-1REFERENCE\s0 \s-1SPECIFICATION\s0"

.IX Subsection "\s-1TIME\s0 \s-1OFFSET\s0 \s-1SPECIFICATION\s0"

.IX Item "1"

.IX Item "2"

.IX Subsection "\s-1TIME\s0 \s-1SPECIFICATION\s0 \s-1EXAMPLES\s0"

.IX Header "AUTHOR"

