#!/bin/sh

# This script runs orca_services with the proper options for your
# site.

# Define program locations that will be needed.
prefix=@prefix@
exec_prefix=@exec_prefix@
libexecdir=@libexecdir@
sysconfdir=@sysconfdir@
AWK=@AWK@
CUT=@CUT@
UNAME=@UNAME@
RAW_ORCA_SERVICES_DIR=@VAR_DIR@/orca_services

# Get the hostname without the fully qualified part; that is, trim off
# anything past the first `.'.
uname=`$UNAME -n | $CUT -d. -f1`

# The directory these files go into is $RAW_ORCA_SERVICES_DIR/HOSTNAME.
OUTDIR=$RAW_ORCA_SERVICES_DIR/$uname

# Export the environmental variables.
export OUTDIR

# Check if orca_services is already running.
pids=`/usr/ucb/ps auxww | $AWK '/orca_services/ && !/awk/ {print $2}'`
if test "$pids" != ""; then
  echo "Orca_services already running.  Exiting."
  exit 1
fi

echo "Writing data into $OUTDIR/"

# Cd to / so that any automounted filesystems can be unmounted.
cd /

# Create the output directory if it doesn't exist yet.
if test ! -d $OUTDIR; then
  echo "Creating $OUTDIR/"
  mkdir -p $OUTDIR
fi

if test ! -d $OUTDIR; then
  echo "Unable to create $OUTDIR/" 1>&2
  exit 2
fi

# Now start the logging.
echo "Starting logging"
HOSTNAME=`hostname`
if test -f "$libexecdir/orca_services.$HOSTNAME"; then
  $libexecdir/orca_services `cat $sysconfdir/orca_services.$HOSTNAME`
else
  $libexecdir/orca_services
fi

# Write the PID of orca_services to a file to make killing easier.
pid=$!
echo $pid > $OUTDIR/orca_services.pid

# Sleep for a couple of seconds to allow any orca_services startup
# warnings to appear on the terminal before exiting.
sleep 5
