


RRDs(3pm)                    rrdtool                    RRDs(3pm)


NNNNAAAAMMMMEEEE
       RRDs - Access rrdtool as a shared module

SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
         use RRDs::ext
         RRDs::error
         RRDs::last ...
         RRDs::create ...
         RRDs::update ...
         RRDs::graph ...
         RRDs::fetch ...
         RRDs::tune ...


DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
       CCCCaaaalllllllliiiinnnngggg SSSSeeeeqqqquuuueeeennnncccceeee

       This module accesses rrdtool functionality directly from
       within perl. The arguments to the functions listed in the
       SYNOPSIS are explained in the regular rrdtool
       documentation. The commandline call

        rrdtool update mydemo.rrd N:12:13

       gets turned into

        RRDs::update qw(mydemo.rrd N:12:13);


       EEEErrrrrrrroooorrrr HHHHaaaannnnddddlllliiiinnnngggg

       The RRD functions will not abort your program even when
       they can not make sense out of the arguments you fed them.
       There are two ways to determine if an error has occured.

       First the every function will return the value -1 if an
       error occured.  Second, the function RRDs::error can be
       called to get the error message from the last function
       call. If RRDs::error does not return an error then the
       previous function has completed its task succesfully.

        RRDs::update qw(mydemo.rrd N:12:13);
        my $ERR=RRDs::error;
        die "ERROR while updating mydemo.rrd: $ERR\n" if $ERR;


       RRRReeeettttuuuurrrrnnnn VVVVaaaalllluuuueeeessss

       The functions RRDs::last, RRDs::graph and RRDs::fetchgive
       return their findigs.

       RRDs::last returns a single INTEGER representing the last
       update time.




27/Aug/99                     1.0.7                             1





RRDs(3pm)                    rrdtool                    RRDs(3pm)


        $lastupdate = RRDs::last ...

       RRDs::graph returns an pointer to an ARRAY containing the
       x-size and y-size of the created gif and results of the
       PRINT arguments.

        ($averages,$xsize,$ysize) = RRDs::graph ...
        print "Gifsize: ${xsize}x${ysize}\n";
        print "Averages: ", (join ", ", @$averages);

       RRDs::fetch is the most complex of the pack regarding
       return values. There are 4 values. Two normal integers, a
       pointer to an array and a pointer to a array of pointers.

        my ($start,$step,$names,$data) = RRDs::fetch ...
        print "Start:        ".localtime($start)."\n";
        print "Stepsize:     $step seconds\n";
        print "Column Names: ".join (", ", @$names)."\n";
        print "Date:\n";
        foreach my $line (@$array){
             print "".localtime($start),"   ";
             $start += $step;
             foreach my $val (@$line) {
                  printf "%12.1f", $val;
             }
             print "\n";
        }

       See the examples directory for more ways to use this
       extension.

AAAAUUUUTTTTHHHHOOOORRRR
       Tobias Oetiker <oeitker@ee.ethy.ch>
























27/Aug/99                     1.0.7                             2


