#!/bin/sh

# This script runs orca_services with the proper options for your site.

# Define program locations that will be needed.
prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libexecdir@
AWK=@AWK@
CUT=@CUT@
UNAME=@UNAME@
ORCA_SERVICES_DIR=@VAR_DIR@/orca_services

# Get the hostname without the fully qualified part; that is, trim off
# anything past the first `.'.
uname=`$UNAME -n | $CUT -d. -f1`

OPERSYS=`$UNAME -s`
if test "${OPERSYS}" = "Linux"; then
    PSCMD="/bin/ps"
else
    PSCMD="/usr/ucb/ps" # Solaris
fi

# The directory these files go into is $ORCA_SERVICES_DIR/HOSTNAME
OUTDIR=$ORCA_SERVICES_DIR/$uname

# Export the environmental variables.
export OUTDIR

# Check if orca_services is already running.
pids=`$PSCMD auxww | $AWK '/orca_services/ && !/awk/ && !/start_orca_services/ && !/daemon/ && !/ \/etc\/init\.d/ && !/ \/etc\/rc/ {print $2}'`
if test "$pids" != ""; then
  echo "Orca_Services already running.  Exiting."
  exit 1
fi

echo "Writing data into $OUTDIR/"

# Cd to / so that any automounted filesystems can be unmounted.
cd /

# Create the output directory if it doesn't exist yet.
if test ! -d $OUTDIR; then
  echo "Creating $OUTDIR/"
  mkdir -p $OUTDIR
fi

if test ! -d $OUTDIR; then
  echo "Unable to create $OUTDIR/" 1>&2
  exit 2
fi

# Now start the logging.
echo "Starting logging"
HOSTNAME=`hostname`
if test -f "$libdir/orca_services.$HOSTNAME"; then
    $libdir/orca_services `cat $libdir/orca_services.$HOSTNAME`
else
    $libdir/orca_services
fi

### # Write the PID of orca_services to a file to make killing easier.
### pid=$!
### echo $pid > $OUTDIR/orca_services.pid

# Sleep for a couple of seconds to allow any orca_services warnings to appear.
sleep 5
